{"ast":null,"code":"var _jsxFileName = \"/Users/pepe/Desktop/Food order app/food-order/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedItems;\n\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    cartDispatch({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFormCarthandler = id => {\n    cartDispatch({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFormCarthandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CartProvider, \"+y+4JIp9zODrXLB/QZ+DsqK+4Aw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter","CartProvider","children","cartState","cartDispatch","addItemToCartHandler","removeItemFormCarthandler","cartContext","addItem","removeItem"],"mappings":"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","sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n   items: [],\n   totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n   if (action.type === 'ADD') {\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem) {\n         const updatedItem = {\n            ...existingCartItem,\n            amount: existingCartItem.amount + action.item.amount,\n         }\n         updatedItems = [...state.items];\n         updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n         updatedItems = state.items.concat(action.item);\n      }\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount,\n      }\n   }\n\n   if (action.type === 'REMOVE') {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n\n      let updatedItems;\n      if (existingCartItem.amount === 1) {\n         updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n         const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\n         updatedItems = [...state.items];\n         updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount\n      };\n   }\n\n   return defaultCartState;\n};\n\nconst CartProvider = ({ children }) => {\n   const [cartState, cartDispatch] = useReducer(cartReducer, defaultCartState);\n\n   const addItemToCartHandler = (item) => {\n      cartDispatch({ type: 'ADD', item: item });\n   };\n\n   const removeItemFormCarthandler = (id) => {\n      cartDispatch({ type: 'REMOVE', id: id });\n   };\n\n   const cartContext = {\n      items: cartState.items,\n      totalAmount: cartState.totalAmount,\n      addItem: addItemToCartHandler,\n      removeItem: removeItemFormCarthandler,\n   };\n\n   return (\n      <CartContext.Provider value={cartContext}>\n         {children}\n      </CartContext.Provider>\n   );\n};\n\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}