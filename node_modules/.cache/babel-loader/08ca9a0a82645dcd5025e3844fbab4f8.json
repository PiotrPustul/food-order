{"ast":null,"code":"var _jsxFileName = \"/Users/pepe/Desktop/Food order app/food-order/src/store/Context/MealsProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport MealsContext from './meals-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MealsProvider = ({\n  children\n}) => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-order-70879-default-rtdb.europe-west1.firebasedatabase.app/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(err => {\n      setIsLoading(false);\n      setHttpError(err.message);\n    });\n  }, []);\n  const mealsContext = {\n    meals,\n    isLoading,\n    httpError\n  };\n  return /*#__PURE__*/_jsxDEV(MealsContext.Provider, {\n    value: mealsContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MealsProvider, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = MealsProvider;\nexport default MealsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealsProvider\");","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/Context/MealsProvider.js"],"names":["useEffect","useState","MealsContext","MealsProvider","children","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","err","message","mealsContext"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMW,UAAU,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oFAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACf,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACF;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC7BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACdC,UAAAA,EAAE,EAAEF,GADU;AAEdG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFV;AAGdC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHjB;AAIdC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJX,SAAjB;AAMF;;AAEDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,KArBD;;AAuBAG,IAAAA,UAAU,GAAGc,KAAb,CAAmBC,GAAG,IAAI;AACvBlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,GAAG,CAACC,OAAL,CAAZ;AACF,KAHD;AAKF,GA7BQ,EA6BN,EA7BM,CAAT;AA+BA,QAAMC,YAAY,GAAG;AAClBvB,IAAAA,KADkB;AAElBE,IAAAA,SAFkB;AAGlBE,IAAAA;AAHkB,GAArB;AAMA,sBACG,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEmB,YAA9B;AAAA,cACIxB;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CA/CD;;GAAMD,a;;KAAAA,a;AAkDN,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport MealsContext from './meals-context';\n\nconst MealsProvider = ({ children }) => {\n   const [meals, setMeals] = useState([]);\n   const [isLoading, setIsLoading] = useState(true);\n   const [httpError, setHttpError] = useState();\n\n   useEffect(() => {\n      const fetchMeals = async () => {\n         const response = await fetch('https://food-order-70879-default-rtdb.europe-west1.firebasedatabase.app/meals.json');\n\n         if (!response.ok) {\n            throw new Error('Something went wrong!');\n         }\n\n         const responseData = await response.json();\n\n         const loadedMeals = [];\n         for (const key in responseData) {\n            loadedMeals.push({\n               id: key,\n               name: responseData[key].name,\n               description: responseData[key].description,\n               price: responseData[key].price\n            });\n         }\n\n         setMeals(loadedMeals);\n         setIsLoading(false);\n      }\n\n      fetchMeals().catch(err => {\n         setIsLoading(false);\n         setHttpError(err.message);\n      });\n\n   }, []);\n\n   const mealsContext = {\n      meals,\n      isLoading,\n      httpError\n   };\n\n   return (\n      <MealsContext.Provider value={mealsContext}>\n         {children}\n      </MealsContext.Provider>\n   );\n};\n\n\nexport default MealsProvider;"]},"metadata":{},"sourceType":"module"}