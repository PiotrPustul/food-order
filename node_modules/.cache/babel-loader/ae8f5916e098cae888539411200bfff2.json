{"ast":null,"code":"var _jsxFileName = \"/Users/pepe/Desktop/Food order app/food-order/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    return;\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    cartDispatch({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFormCarthandler = id => {\n    cartDispatch({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFormCarthandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CartProvider, \"+y+4JIp9zODrXLB/QZ+DsqK+4Aw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","concat","CartProvider","children","cartState","cartDispatch","addItemToCartHandler","removeItemFormCarthandler","cartContext","addItem","removeItem"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,WAAW,EAAE;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACxB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA9B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AACA,UAAMI,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYe,MAAZ,CAAmBX,MAAM,CAACG,IAA1B,CAArB;AAEA,WAAO;AACJP,MAAAA,KAAK,EAAEc,YADH;AAEJb,MAAAA,WAAW,EAAEK;AAFT,KAAP;AAIF;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC3B;AACF;;AAED,SAAON,gBAAP;AACF,CAnBD;;AAqBA,MAAMiB,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BtB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAA5C;;AAEA,QAAMqB,oBAAoB,GAAIb,IAAD,IAAU;AACpCY,IAAAA,YAAY,CAAC;AAAEd,MAAAA,IAAI,EAAE,KAAR;AAAeE,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACF,GAFD;;AAIA,QAAMc,yBAAyB,GAAIT,EAAD,IAAQ;AACvCO,IAAAA,YAAY,CAAC;AAAEd,MAAAA,IAAI,EAAE,QAAR;AAAkBO,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACF,GAFD;;AAIA,QAAMU,WAAW,GAAG;AACjBtB,IAAAA,KAAK,EAAEkB,SAAS,CAAClB,KADA;AAEjBC,IAAAA,WAAW,EAAEiB,SAAS,CAACjB,WAFN;AAGjBsB,IAAAA,OAAO,EAAEH,oBAHQ;AAIjBI,IAAAA,UAAU,EAAEH;AAJK,GAApB;AAOA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACIL;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CAvBD;;GAAMD,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\n\nconst defaultCartState = {\n   items: [],\n   totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n   if (action.type === 'ADD') {\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      const updatedItems = state.items.concat(action.item);\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount,\n      }\n   }\n\n   if (action.type === 'REMOVE') {\n      return\n   }\n\n   return defaultCartState;\n};\n\nconst CartProvider = ({ children }) => {\n   const [cartState, cartDispatch] = useReducer(cartReducer, defaultCartState);\n\n   const addItemToCartHandler = (item) => {\n      cartDispatch({ type: 'ADD', item: item });\n   };\n\n   const removeItemFormCarthandler = (id) => {\n      cartDispatch({ type: 'REMOVE', id: id });\n   };\n\n   const cartContext = {\n      items: cartState.items,\n      totalAmount: cartState.totalAmount,\n      addItem: addItemToCartHandler,\n      removeItem: removeItemFormCarthandler,\n   };\n\n   return (\n      <CartContext.Provider value={cartContext}>\n         {children}\n      </CartContext.Provider>\n   );\n};\n\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}