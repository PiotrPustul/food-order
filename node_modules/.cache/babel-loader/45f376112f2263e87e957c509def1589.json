{"ast":null,"code":"var _jsxFileName = \"/Users/pepe/Desktop/Food order app/food-order/src/store/Context/OrdersProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport OrdersContext from './orders-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrdersProvider = ({\n  children\n}) => {\n  _s();\n\n  const [orders, setOrders] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const response = await fetch('https://food-order-70879-default-rtdb.europe-west1.firebasedatabase.app/orders.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedOrders = [];\n\n      for (const key in responseData) {\n        loadedOrders.push({\n          id: key,\n          orderedItems: responseData[key].orderedItems,\n          user: responseData[key].user\n        });\n      }\n\n      setOrders(loadedOrders);\n      setIsLoading(false);\n    };\n\n    fetchOrders().catch(err => {\n      setIsLoading(false);\n      setHttpError(err.message);\n    });\n  }, []);\n  const ordersContext = {\n    orders,\n    isLoading,\n    httpError\n  };\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: ordersContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n};\n\n_s(OrdersProvider, \"5pHtWI5Q316qRtaOYDxHcKj7Fzc=\");\n\n_c = OrdersProvider;\nexport default OrdersProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersProvider\");","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/Context/OrdersProvider.js"],"names":["useEffect","useState","OrdersContext","OrdersProvider","children","orders","setOrders","isLoading","setIsLoading","httpError","setHttpError","fetchOrders","response","fetch","ok","Error","responseData","json","loadedOrders","key","push","id","orderedItems","user","catch","err","message","ordersContext"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMW,WAAW,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qFAAD,CAA5B;;AAEA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACf,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACF;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,YAAY,GAAG,EAArB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAAgC;AAC7BE,QAAAA,YAAY,CAACE,IAAb,CAAkB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,YAAY,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,YAFjB;AAGfC,UAAAA,IAAI,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI;AAHT,SAAlB;AAKF;;AAEDjB,MAAAA,SAAS,CAACY,YAAD,CAAT;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,KApBD;;AAsBAG,IAAAA,WAAW,GAAGa,KAAd,CAAoBC,GAAG,IAAI;AACxBjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACe,GAAG,CAACC,OAAL,CAAZ;AACF,KAHD;AAIF,GA3BQ,EA2BN,EA3BM,CAAT;AA6BA,QAAMC,aAAa,GAAG;AACnBtB,IAAAA,MADmB;AAEnBE,IAAAA,SAFmB;AAGnBE,IAAAA;AAHmB,GAAtB;AAMA,sBACG,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEkB,aAA/B;AAAA,cACIvB;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CA7CD;;GAAMD,c;;KAAAA,c;AA+CN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nimport OrdersContext from './orders-context';\n\nconst OrdersProvider = ({ children }) => {\n   const [orders, setOrders] = useState([]);\n   const [isLoading, setIsLoading] = useState(true);\n   const [httpError, setHttpError] = useState();\n\n   useEffect(() => {\n      const fetchOrders = async () => {\n         const response = await fetch('https://food-order-70879-default-rtdb.europe-west1.firebasedatabase.app/orders.json');\n\n         if (!response.ok) {\n            throw new Error('Something went wrong!');\n         }\n\n         const responseData = await response.json();\n\n         const loadedOrders = [];\n         for (const key in responseData) {\n            loadedOrders.push({\n               id: key,\n               orderedItems: responseData[key].orderedItems,\n               user: responseData[key].user\n            });\n         }\n\n         setOrders(loadedOrders);\n         setIsLoading(false);\n      };\n\n      fetchOrders().catch(err => {\n         setIsLoading(false);\n         setHttpError(err.message);\n      });\n   }, []);\n\n   const ordersContext = {\n      orders,\n      isLoading,\n      httpError\n   };\n\n   return (\n      <OrdersContext.Provider value={ordersContext}>\n         {children}\n      </OrdersContext.Provider>\n   );\n};\n\nexport default OrdersProvider;"]},"metadata":{},"sourceType":"module"}