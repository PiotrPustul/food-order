{"ast":null,"code":"import _slicedToArray from\"/Users/pepe/Desktop/Food order app/food-order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useRef,useState}from'react';import classes from'./Checkout.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var isEmpty=function isEmpty(value){return value.trim()==='';};var isSevenChars=function isSevenChars(value){return value.trim().length===7;};var Checkout=function Checkout(props){var _useState=useState({name:true,street:true,city:true,postCode:true}),_useState2=_slicedToArray(_useState,2),formInputsValidity=_useState2[0],setFormInputsValidity=_useState2[1];var nameInputRef=useRef();var streetInputRef=useRef();var postCodeInputRef=useRef();var cityInputRef=useRef();var confirmHandler=function confirmHandler(event){event.preventDefault();var enteredName=nameInputRef.current.value;var enteredStreet=streetInputRef.current.value;var enteredPostCode=postCodeInputRef.current.value;var enteredCity=cityInputRef.current.value;var enteredNameIsValid=!isEmpty(enteredName);var enteredStreetIsValid=!isEmpty(enteredStreet);var enteredCityIsValid=!isEmpty(enteredCity);var enteredPostCodeIsValid=isSevenChars(enteredPostCode);setFormInputsValidity({name:enteredNameIsValid,street:enteredStreetIsValid,city:enteredCityIsValid,postCode:enteredPostCodeIsValid});var formIsValid=enteredNameIsValid&&enteredStreetIsValid&&enteredCityIsValid&&enteredPostCodeIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName.toUpperCase(),street:enteredStreet.toUpperCase(),city:enteredCity.toUpperCase(),postCode:enteredPostCode.toUpperCase()});};var nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.name?'':classes.invalid);var streetControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.street?'':classes.invalid);var postCodeControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.postCode?'':classes.invalid);var cityControlClasses=\"\".concat(classes.control,\" \").concat(formInputsValidity.city?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",ref:nameInputRef}),!formInputsValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:streetControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"street\",children:\"Street\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"street\",ref:streetInputRef}),!formInputsValidity.street&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid street!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:postCodeControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"post\",children:\"Post code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"post\",ref:postCodeInputRef}),!formInputsValidity.postCode&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid post code! (7 chars)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:cityControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"City\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"city\",ref:cityInputRef}),!formInputsValidity.city&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid city!\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onHoldOrder,children:\"Hold order\"})]})]});};export default Checkout;","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/components/Cart/Checkout.js"],"names":["useRef","useState","classes","isEmpty","value","trim","isSevenChars","length","Checkout","props","name","street","city","postCode","formInputsValidity","setFormInputsValidity","nameInputRef","streetInputRef","postCodeInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredCityIsValid","enteredPostCodeIsValid","formIsValid","onConfirm","toUpperCase","nameControlClasses","control","invalid","streetControlClasses","postCodeControlClasses","cityControlClasses","form","actions","submit","onHoldOrder"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\n\nimport classes from './Checkout.module.css';\n\nconst isEmpty = value => value.trim() === '';\nconst isSevenChars = value => value.trim().length === 7;\n\nconst Checkout = (props) => {\n   const [formInputsValidity, setFormInputsValidity] = useState({\n      name: true,\n      street: true,\n      city: true,\n      postCode: true\n   });\n\n   const nameInputRef = useRef();\n   const streetInputRef = useRef();\n   const postCodeInputRef = useRef();\n   const cityInputRef = useRef();\n\n   const confirmHandler = (event) => {\n      event.preventDefault();\n\n      const enteredName = nameInputRef.current.value;\n      const enteredStreet = streetInputRef.current.value;\n      const enteredPostCode = postCodeInputRef.current.value;\n      const enteredCity = cityInputRef.current.value;\n\n      const enteredNameIsValid = !isEmpty(enteredName);\n      const enteredStreetIsValid = !isEmpty(enteredStreet);\n      const enteredCityIsValid = !isEmpty(enteredCity);\n      const enteredPostCodeIsValid = isSevenChars(enteredPostCode);\n\n      setFormInputsValidity({\n         name: enteredNameIsValid,\n         street: enteredStreetIsValid,\n         city: enteredCityIsValid,\n         postCode: enteredPostCodeIsValid\n      });\n\n      const formIsValid =\n         enteredNameIsValid &&\n         enteredStreetIsValid &&\n         enteredCityIsValid &&\n         enteredPostCodeIsValid\n\n      if (!formIsValid) {\n         return;\n      }\n\n      props.onConfirm({\n         name: enteredName.toUpperCase(),\n         street: enteredStreet.toUpperCase(),\n         city: enteredCity.toUpperCase(),\n         postCode: enteredPostCode.toUpperCase(),\n      });\n   };\n\n   const nameControlClasses = `${classes.control} ${formInputsValidity.name ? '' : classes.invalid}`;\n   const streetControlClasses = `${classes.control} ${formInputsValidity.street ? '' : classes.invalid}`;\n   const postCodeControlClasses = `${classes.control} ${formInputsValidity.postCode ? '' : classes.invalid}`;\n   const cityControlClasses = `${classes.control} ${formInputsValidity.city ? '' : classes.invalid}`;\n\n   return (\n      <form className={classes.form} onSubmit={confirmHandler}>\n         <div className={nameControlClasses}>\n            <label htmlFor=\"name\">Your Name</label>\n            <input type=\"text\" id=\"name\" ref={nameInputRef} />\n            {!formInputsValidity.name && <p>Please enter a valid name!</p>}\n         </div>\n         <div className={streetControlClasses}>\n            <label htmlFor=\"street\">Street</label>\n            <input type=\"text\" id=\"street\" ref={streetInputRef} />\n            {!formInputsValidity.street && <p>Please enter a valid street!</p>}\n         </div>\n         <div className={postCodeControlClasses}>\n            <label htmlFor=\"post\">Post code</label>\n            <input type=\"text\" id=\"post\" ref={postCodeInputRef} />\n            {!formInputsValidity.postCode && <p>Please enter a valid post code! (7 chars)</p>}\n         </div>\n         <div className={cityControlClasses}>\n            <label htmlFor=\"city\">City</label>\n            <input type=\"text\" id=\"city\" ref={cityInputRef} />\n            {!formInputsValidity.city && <p>Please enter a valid city!</p>}\n         </div>\n         <div className={classes.actions}>\n            <button className={classes.submit}>Confirm</button>\n            <button type=\"button\" onClick={props.onHoldOrder}>Hold order</button>\n         </div>\n      </form>\n   );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}