{"ast":null,"code":"var _jsxFileName = \"/Users/pepe/Desktop/Food order app/food-order/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport cartReducer, { defaultCartState } from './Reducers/cart-reducer'; // const defaultCartState = {\n//    items: [],\n//    totalAmount: 0,\n// };\n// const cartReducer = (state, action) => {\n//    if (action.type === 'ADD') {\n//       const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n//       const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n//       const existingCartItem = state.items[existingCartItemIndex];\n//       let updatedItems;\n//       if (existingCartItem) {\n//          const updatedItem = {\n//             ...existingCartItem,\n//             amount: existingCartItem.amount + action.item.amount,\n//          }\n//          updatedItems = [...state.items];\n//          updatedItems[existingCartItemIndex] = updatedItem;\n//       } else {\n//          updatedItems = state.items.concat(action.item);\n//       }\n//       return {\n//          items: updatedItems,\n//          totalAmount: updatedTotalAmount,\n//       }\n//    }\n//    if (action.type === 'REMOVE') {\n//       const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n//       const existingCartItem = state.items[existingCartItemIndex];\n//       const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n//       let updatedItems;\n//       if (existingCartItem.amount === 1) {\n//          updatedItems = state.items.filter(item => item.id !== action.id);\n//       } else {\n//          const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\n//          updatedItems = [...state.items];\n//          updatedItems[existingCartItemIndex] = updatedItem;\n//       }\n//       return {\n//          items: updatedItems,\n//          totalAmount: updatedTotalAmount\n//       };\n//    }\n//    if (action.type === 'CLEAR') {\n//       return defaultCartState;\n//    }\n//    return defaultCartState;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartProvider = ({\n  children\n}) => {\n  _s();\n\n  const [cartState, cartDispatch] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    cartDispatch({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFormCarthandler = id => {\n    cartDispatch({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const clearCarthandler = () => {\n    cartDispatch({\n      type: 'CLEAR'\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFormCarthandler,\n    clearCart: clearCarthandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n\n_s(CartProvider, \"+y+4JIp9zODrXLB/QZ+DsqK+4Aw=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/CartProvider.js"],"names":["useReducer","CartContext","cartReducer","defaultCartState","CartProvider","children","cartState","cartDispatch","addItemToCartHandler","item","type","removeItemFormCarthandler","id","clearCarthandler","cartContext","items","totalAmount","addItem","removeItem","clearCart"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,IAAsBC,gBAAtB,QAA8C,yBAA9C,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,UAAU,CAACE,WAAD,EAAcC,gBAAd,CAA5C;;AAEA,QAAMK,oBAAoB,GAAIC,IAAD,IAAU;AACpCF,IAAAA,YAAY,CAAC;AAAEG,MAAAA,IAAI,EAAE,KAAR;AAAeD,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAZ;AACF,GAFD;;AAIA,QAAME,yBAAyB,GAAIC,EAAD,IAAQ;AACvCL,IAAAA,YAAY,CAAC;AAAEG,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAZ;AACF,GAFD;;AAIA,QAAMC,gBAAgB,GAAG,MAAM;AAC5BN,IAAAA,YAAY,CAAC;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ;AACF,GAFD;;AAIA,QAAMI,WAAW,GAAG;AACjBC,IAAAA,KAAK,EAAET,SAAS,CAACS,KADA;AAEjBC,IAAAA,WAAW,EAAEV,SAAS,CAACU,WAFN;AAGjBC,IAAAA,OAAO,EAAET,oBAHQ;AAIjBU,IAAAA,UAAU,EAAEP,yBAJK;AAKjBQ,IAAAA,SAAS,EAAEN;AALM,GAApB;AAQA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACIT;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CA5BD;;GAAMD,Y;;KAAAA,Y;AA+BN,eAAeA,YAAf","sourcesContent":["import { useReducer } from 'react';\n\nimport CartContext from './cart-context';\nimport cartReducer, { defaultCartState } from './Reducers/cart-reducer';\n\n// const defaultCartState = {\n//    items: [],\n//    totalAmount: 0,\n// };\n\n// const cartReducer = (state, action) => {\n//    if (action.type === 'ADD') {\n//       const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n//       const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n//       const existingCartItem = state.items[existingCartItemIndex];\n//       let updatedItems;\n\n//       if (existingCartItem) {\n//          const updatedItem = {\n//             ...existingCartItem,\n//             amount: existingCartItem.amount + action.item.amount,\n//          }\n//          updatedItems = [...state.items];\n//          updatedItems[existingCartItemIndex] = updatedItem;\n//       } else {\n//          updatedItems = state.items.concat(action.item);\n//       }\n\n//       return {\n//          items: updatedItems,\n//          totalAmount: updatedTotalAmount,\n//       }\n//    }\n\n//    if (action.type === 'REMOVE') {\n//       const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n//       const existingCartItem = state.items[existingCartItemIndex];\n//       const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n\n//       let updatedItems;\n//       if (existingCartItem.amount === 1) {\n//          updatedItems = state.items.filter(item => item.id !== action.id);\n//       } else {\n//          const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\n//          updatedItems = [...state.items];\n//          updatedItems[existingCartItemIndex] = updatedItem;\n//       }\n\n//       return {\n//          items: updatedItems,\n//          totalAmount: updatedTotalAmount\n//       };\n//    }\n\n//    if (action.type === 'CLEAR') {\n//       return defaultCartState;\n//    }\n\n//    return defaultCartState;\n// };\n\nconst CartProvider = ({ children }) => {\n   const [cartState, cartDispatch] = useReducer(cartReducer, defaultCartState);\n\n   const addItemToCartHandler = (item) => {\n      cartDispatch({ type: 'ADD', item: item });\n   };\n\n   const removeItemFormCarthandler = (id) => {\n      cartDispatch({ type: 'REMOVE', id: id });\n   };\n\n   const clearCarthandler = () => {\n      cartDispatch({ type: 'CLEAR' });\n   };\n\n   const cartContext = {\n      items: cartState.items,\n      totalAmount: cartState.totalAmount,\n      addItem: addItemToCartHandler,\n      removeItem: removeItemFormCarthandler,\n      clearCart: clearCarthandler,\n   };\n\n   return (\n      <CartContext.Provider value={cartContext}>\n         {children}\n      </CartContext.Provider>\n   );\n};\n\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}