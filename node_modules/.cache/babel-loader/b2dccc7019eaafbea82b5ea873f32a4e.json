{"ast":null,"code":"import _toConsumableArray from\"/Users/pepe/Desktop/Food order app/food-order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/pepe/Desktop/Food order app/food-order/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ADD,REMOVE,CLEAR}from'../Actions/cart-actions';export var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type===ADD){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];var updatedItems;if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type===REMOVE){var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var _existingCartItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-_existingCartItem.price;var _updatedItems;if(_existingCartItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},_existingCartItem),{},{amount:_existingCartItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}if(action.type===CLEAR){return defaultCartState;}return defaultCartState;};export default cartReducer;","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/Reducers/cart-reducer.js"],"names":["ADD","REMOVE","CLEAR","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter"],"mappings":"+UAAA,OAASA,GAAT,CAAcC,MAAd,CAAsBC,KAAtB,KAAmC,yBAAnC,CAEA,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,CAC7BC,KAAK,CAAE,EADsB,CAE7BC,WAAW,CAAE,CAFgB,CAAzB,CAKP,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACpC,GAAIA,MAAM,CAACC,IAAP,GAAgBT,GAApB,CAAyB,CACtB,GAAMU,CAAAA,kBAAkB,CAAGH,KAAK,CAACF,WAAN,CAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E,CAEA,GAAMC,CAAAA,qBAAqB,CAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsB,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACK,EAAL,GAAYR,MAAM,CAACG,IAAP,CAAYK,EAA5B,EAA1B,CAA9B,CACA,GAAMC,CAAAA,gBAAgB,CAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB,CACA,GAAII,CAAAA,YAAJ,CAEA,GAAID,gBAAJ,CAAsB,CACnB,GAAME,CAAAA,WAAW,gCACXF,gBADW,MAEdJ,MAAM,CAAEI,gBAAgB,CAACJ,MAAjB,CAA0BL,MAAM,CAACG,IAAP,CAAYE,MAFhC,EAAjB,CAIAK,YAAY,oBAAOX,KAAK,CAACH,KAAb,CAAZ,CACAc,YAAY,CAACJ,qBAAD,CAAZ,CAAsCK,WAAtC,CACF,CAPD,IAOO,CACJD,YAAY,CAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf,CACF,CAED,MAAO,CACJP,KAAK,CAAEc,YADH,CAEJb,WAAW,CAAEK,kBAFT,CAAP,CAIF,CAED,GAAIF,MAAM,CAACC,IAAP,GAAgBR,MAApB,CAA4B,CACzB,GAAMa,CAAAA,sBAAqB,CAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsB,SAAAJ,IAAI,QAAIA,CAAAA,IAAI,CAACK,EAAL,GAAYR,MAAM,CAACQ,EAAvB,EAA1B,CAA9B,CACA,GAAMC,CAAAA,iBAAgB,CAAGV,KAAK,CAACH,KAAN,CAAYU,sBAAZ,CAAzB,CACA,GAAMJ,CAAAA,mBAAkB,CAAGH,KAAK,CAACF,WAAN,CAAoBY,iBAAgB,CAACL,KAAhE,CAEA,GAAIM,CAAAA,aAAJ,CACA,GAAID,iBAAgB,CAACJ,MAAjB,GAA4B,CAAhC,CAAmC,CAChCK,aAAY,CAAGX,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmB,SAAAV,IAAI,QAAIA,CAAAA,IAAI,CAACK,EAAL,GAAYR,MAAM,CAACQ,EAAvB,EAAvB,CAAf,CACF,CAFD,IAEO,CACJ,GAAMG,CAAAA,YAAW,gCAAQF,iBAAR,MAA0BJ,MAAM,CAAEI,iBAAgB,CAACJ,MAAjB,CAA0B,CAA5D,EAAjB,CACAK,aAAY,oBAAOX,KAAK,CAACH,KAAb,CAAZ,CACAc,aAAY,CAACJ,sBAAD,CAAZ,CAAsCK,YAAtC,CACF,CAED,MAAO,CACJf,KAAK,CAAEc,aADH,CAEJb,WAAW,CAAEK,mBAFT,CAAP,CAIF,CAED,GAAIF,MAAM,CAACC,IAAP,GAAgBP,KAApB,CAA2B,CACxB,MAAOC,CAAAA,gBAAP,CACF,CAED,MAAOA,CAAAA,gBAAP,CACF,CAlDD,CAoDA,cAAeG,CAAAA,WAAf","sourcesContent":["import { ADD, REMOVE, CLEAR } from '../Actions/cart-actions';\n\nexport const defaultCartState = {\n   items: [],\n   totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n   if (action.type === ADD) {\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem) {\n         const updatedItem = {\n            ...existingCartItem,\n            amount: existingCartItem.amount + action.item.amount,\n         }\n         updatedItems = [...state.items];\n         updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n         updatedItems = state.items.concat(action.item);\n      }\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount,\n      }\n   }\n\n   if (action.type === REMOVE) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n\n      let updatedItems;\n      if (existingCartItem.amount === 1) {\n         updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n         const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\n         updatedItems = [...state.items];\n         updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount\n      };\n   }\n\n   if (action.type === CLEAR) {\n      return defaultCartState;\n   }\n\n   return defaultCartState;\n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}