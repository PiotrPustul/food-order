{"ast":null,"code":"import { ADD, REMOVE, CLEAR } from '../Actions/cart-actions';\nexport const defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n    let updatedItems;\n\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'CLEAR') {\n    return defaultCartState;\n  }\n\n  return defaultCartState;\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/pepe/Desktop/Food order app/food-order/src/store/Reducers/cart-reducer.js"],"names":["ADD","REMOVE","CLEAR","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","filter"],"mappings":"AAAA,SACGA,GADH,EAEGC,MAFH,EAGGC,KAHH,QAIO,yBAJP;AAMA,OAAO,MAAMC,gBAAgB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,EADsB;AAE7BC,EAAAA,WAAW,EAAE;AAFgB,CAAzB;;AAKP,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACxB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA/E;AAEA,UAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACG,IAAP,CAAYK,EAAtD,CAA9B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AACA,QAAII,YAAJ;;AAEA,QAAID,gBAAJ,EAAsB;AACnB,YAAME,WAAW,GAAG,EACjB,GAAGF,gBADc;AAEjBJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAF7B,OAApB;AAIAK,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACF,KAPD,MAOO;AACJD,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf;AACF;;AAED,WAAO;AACJP,MAAAA,KAAK,EAAEc,YADH;AAEJb,MAAAA,WAAW,EAAEK;AAFT,KAAP;AAIF;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC3B,UAAMK,qBAAqB,GAAGP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAsBJ,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACQ,EAAjD,CAA9B;AACA,UAAMC,gBAAgB,GAAGV,KAAK,CAACH,KAAN,CAAYU,qBAAZ,CAAzB;AACA,UAAMJ,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBY,gBAAgB,CAACL,KAAhE;AAEA,QAAIM,YAAJ;;AACA,QAAID,gBAAgB,CAACJ,MAAjB,KAA4B,CAAhC,EAAmC;AAChCK,MAAAA,YAAY,GAAGX,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACK,EAAL,KAAYR,MAAM,CAACQ,EAA9C,CAAf;AACF,KAFD,MAEO;AACJ,YAAMG,WAAW,GAAG,EAAE,GAAGF,gBAAL;AAAuBJ,QAAAA,MAAM,EAAEI,gBAAgB,CAACJ,MAAjB,GAA0B;AAAzD,OAApB;AACAK,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACJ,qBAAD,CAAZ,GAAsCK,WAAtC;AACF;;AAED,WAAO;AACJf,MAAAA,KAAK,EAAEc,YADH;AAEJb,MAAAA,WAAW,EAAEK;AAFT,KAAP;AAIF;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,OAApB,EAA6B;AAC1B,WAAON,gBAAP;AACF;;AAED,SAAOA,gBAAP;AACF,CAlDD;;AAoDA,eAAeG,WAAf","sourcesContent":["import {\n   ADD,\n   REMOVE,\n   CLEAR\n} from '../Actions/cart-actions';\n\nexport const defaultCartState = {\n   items: [],\n   totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n   if (action.type === 'ADD') {\n      const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      let updatedItems;\n\n      if (existingCartItem) {\n         const updatedItem = {\n            ...existingCartItem,\n            amount: existingCartItem.amount + action.item.amount,\n         }\n         updatedItems = [...state.items];\n         updatedItems[existingCartItemIndex] = updatedItem;\n      } else {\n         updatedItems = state.items.concat(action.item);\n      }\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount,\n      }\n   }\n\n   if (action.type === 'REMOVE') {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingCartItem.price;\n\n      let updatedItems;\n      if (existingCartItem.amount === 1) {\n         updatedItems = state.items.filter(item => item.id !== action.id);\n      } else {\n         const updatedItem = { ...existingCartItem, amount: existingCartItem.amount - 1 };\n         updatedItems = [...state.items];\n         updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      return {\n         items: updatedItems,\n         totalAmount: updatedTotalAmount\n      };\n   }\n\n   if (action.type === 'CLEAR') {\n      return defaultCartState;\n   }\n\n   return defaultCartState;\n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}